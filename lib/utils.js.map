{"version":3,"sources":["lib/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["/// <reference path=\"../typings/main.d.ts\"/>\nimport { networkInterfaces } from 'os';\nimport { spawn, ChildProcess } from 'child_process';\nimport { EventEmitter} from \"events\";\nimport { Writable, Readable } from \"stream\";\nimport * as crypto from \"crypto\";\n\nvar clc = require('cli-color');\n\nexport module Utils {\n  export enum logLevel {\n    None = 0,\n    Error = 1,\n    Warn = 2,\n    Info = 3,\n    Debug = 4\n  }\n\n  class DummyProcess extends EventEmitter implements ChildProcess {\n    stdin: Writable;\n    stdout: Readable;\n    stderr: Readable;\n    stdio: [Writable, Readable, Readable];\n    pid: number;\n    constructor() {\n      super();\n      this.stdin = new Writable();\n      this.stderr = this.stdout = new DummyReadable();\n    }\n    kill(signal?: string) { };\n    send(message: any, sendHandle?: any) { };\n    disconnect() { };\n    unref() { };\n  }\n\n  class DummyReadable extends Readable {\n    read() { return null; }\n  }\n\n  export class utils {\n    private static config: rposConfig;\n    static setConfig(config: rposConfig) {\n      this.config = config;\n    }\n\n    static getSerial() {\n      // Extract serial from cpuinfo file\n      var cpuserial = \"0000000000000000\";\n      try {\n        var f = utils.execSync('cat /proc/cpuinfo').toString();\n        cpuserial = f.match(/Serial[\\t]*: ([0-9a-f]{16})/)[1];\n      } catch (ex) {\n        this.log.error(\"Failed to read serial : %s\", ex.message);\n        cpuserial = \"ERROR000000000\";\n      }\n      return cpuserial;\n    }\n\n    static testIpAddress() {\n      var ip, interfaces = networkInterfaces();\n      for (var inf of this.config.NetworkAdapters) {\n        ip = this.getAddress(interfaces[inf], \"IPv4\");\n        if (!ip)\n          utils.log.debug(\"Read IP address from %s failed\", inf);\n        else {\n          utils.log.info(\"Read IP address %s from %s\", ip, inf);\n          return;\n        }\n      }\n      utils.log.info(\"Using IP address from config: %s\", this.config.IpAddress);\n    }\n    private static getAddress = (ni: any[], type) => {\n      ni = ni || [];\n      var address = \"\";\n      for (var nif of ni) {\n        if (nif.family == type)\n          address = nif.address;\n      }\n      return address;\n    }\n\n    static getIpAddress(type?: string) {\n      type = type || \"IPv4\";\n      var interfaces = networkInterfaces();\n      for (var inf of this.config.NetworkAdapters) {\n        var ip = this.getAddress(interfaces[inf], type);\n        if (ip)\n          return ip;\n      }\n      return this.config.IpAddress;\n    }\n\n    // Various methods to detect if this is a Pi\n    // a) Try Device Tree (newer Linux versions)\n    // b) Check /proc/cpuinfo Revision ID\n\n    static isPi() {\n      // Try Device-Tree. Only in kernels from 2017 onwards \n      try {\n        var f = utils.execSync('cat /proc/device-tree/model').toString();\n        if (f.includes('Raspberry Pi')) return true;\n      } catch (ex) {\n        // Try /proc/cpuinfo and a valid Raspberry Pi Model ID\n        try {\n          var model = require('rpi-version')();\n          if (typeof model != \"undefined\") return true;\n        } catch (ex) {\n        }\n      }\n      return false;\n    }\n      \n\n    static notPi() {\n      return /^win/.test(process.platform) || /^darwin/.test(process.platform);\n    }\n\n    static isWindows() {\n      return /^win/.test(process.platform);\n    }\n\n    static isLinux() {\n      return /^linux/.test(process.platform);\n    }\n\n    static isMac() {\n      return /^darwin/.test(process.platform);\n    }\n    \n    static log = {\n      level: logLevel.Error,\n      error(message: string, ...args) {\n        if (utils.log.level > logLevel.None) {\n          message = clc.red(message);\n          console.log.apply(this, [message, ...args]);\n        }\n      },\n      warn(message: string, ...args) {\n        if (utils.log.level > logLevel.Error) {\n          message = clc.yellow(message);\n          console.log.apply(this, [message, ...args]);\n        }\n      },\n      info(message: string, ...args) {\n        if (utils.log.level > logLevel.Warn)\n          console.log.apply(this, [message, ...args]);\n      },\n      debug(message: string, ...args) {\n        if (utils.log.level > logLevel.Info) {\n          message = clc.green(message);\n          console.log.apply(this, [message, ...args]);\n        }\n      }\n    }\n    static execSync(cmd: string) {\n      utils.log.debug([\"execSync('\", cmd, \"')\"].join(''));\n      return utils.notPi() ? \"\" : require('child_process').execSync(cmd);\n    }\n    static spawn(cmd: string, args?: string[], options?: {}): ChildProcess {\n      utils.log.debug(`spawn('${cmd}', [${args.join()}], ${options})`);\n      if (utils.notPi()) {\n        return new DummyProcess();\n      }\n      else {\n        return spawn(cmd, args, options);\n      }\n    }\n\n    static cleanup(callback: () => void) {\n\n      // attach user callback to the process event emitter\n      // if no callback, it will still exit gracefully on Ctrl-C\n      callback = callback || (() => { });\n      process.on('cleanup', callback);\n\n      // do app specific cleaning before exiting\n      process.on('exit', () => {\n        process.emit('cleanup');\n      });\n\n      // catch ctrl+c event and exit normally\n      process.on('SIGINT', () => {\n        console.log('Ctrl-C...');\n        process.exit(2);\n      });\n\n      //catch uncaught exceptions, trace, then exit normally\n      process.on('uncaughtException', (e) => {\n        utils.log.error('Uncaught Exception... : %s', e.stack);\n        process.exit(99);\n      });\n    }\n    \n    static uuid5(str: string) {\n      var out = crypto.createHash(\"sha1\").update(str).digest();\n\n      out[8] = out[8] & 0x3f | 0xa0; // set variant\n      out[6] = out[6] & 0x0f | 0x50; // set version\n\n      let hex = out.toString(\"hex\", 0, 16);\n\n      return [\n        hex.substring(0, 8),\n        hex.substring(8, 12),\n        hex.substring(12, 16),\n        hex.substring(16, 20),\n        hex.substring(20, 32)\n      ].join(\"-\");\n    }\n  }\n}\n"]}