{"version":3,"sources":["services/device_service.ts"],"names":[],"mappings":"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","file":"device_service.js","sourcesContent":["///<reference path=\"../typings/main.d.ts\" />\n///<reference path=\"../rpos.d.ts\" />\n\nimport fs = require(\"fs\");\nimport util = require(\"util\");\nimport os = require('os');\nimport SoapService = require('../lib/SoapService');\nimport { Utils }  from '../lib/utils';\nimport { Server } from 'http';\nimport ip = require('ip');\nvar utils = Utils.utils;\n\nclass DeviceService extends SoapService {\n  device_service: any;\n  callback: any;\n\n  constructor(config: rposConfig, server: Server, callback) {\n    super(config, server);\n\n    this.device_service = require('./stubs/device_service.js').DeviceService;\n    this.callback = callback;\n\n    this.serviceOptions = {\n      path: '/onvif/device_service',\n      services: this.device_service,\n      xml: fs.readFileSync('./wsdl/device_service.wsdl', 'utf8'),\n      wsdlPath: 'wsdl/device_service.wsdl',\n      onReady: () => console.log('device_service started')\n    };\n\n    this.extendService();\n  }\n\n  extendService() {\n    var port = this.device_service.DeviceService.Device;\n\n    port.GetDeviceInformation = (args /*, cb, headers*/) => {\n      var GetDeviceInformationResponse = {\n        Manufacturer: this.config.DeviceInformation.Manufacturer,\n        Model: this.config.DeviceInformation.Model,\n        FirmwareVersion: this.config.DeviceInformation.FirmwareVersion,\n        SerialNumber: this.config.DeviceInformation.SerialNumber,\n        HardwareId: this.config.DeviceInformation.HardwareId\n      };\n      return GetDeviceInformationResponse;\n    };\n\n    port.GetSystemDateAndTime = (args /*, cb, headers*/) => {\n      var now = new Date();\n\n      // Ideally this code would compute a full POSIX TZ string with daylight saving\n      // For now we will compute the current time zone as a UTC offset\n      // Note that what we call UTC+ 1 in called UTC-1 in Posix TZ format\n      var offset = now.getTimezoneOffset();\n      var abs_offset = Math.abs(offset);\n      var hrs_offset = Math.floor(abs_offset / 60);\n      var mins_offset = (abs_offset % 60);\n      var tz = \"UTC\" + (offset < 0 ? '-' : '+') + hrs_offset + (mins_offset === 0 ? '' : ':' + mins_offset);\n\n      var GetSystemDateAndTimeResponse = {\n        SystemDateAndTime: {\n          DateTimeType: \"NTP\",\n          DaylightSavings: now.dst(),\n          TimeZone: {\n            TZ: tz\n          },\n          UTCDateTime: {\n            Time: { Hour: now.getUTCHours(), Minute: now.getUTCMinutes(), Second: now.getUTCSeconds() },\n            Date: { Year: now.getUTCFullYear(), Month: now.getUTCMonth() + 1, Day: now.getUTCDate() }\n          },\n          LocalDateTime: {\n            Time: { Hour: now.getHours(), Minute: now.getMinutes(), Second: now.getSeconds() },\n            Date: { Year: now.getFullYear(), Month: now.getMonth() + 1, Day: now.getDate() }\n          },\n          Extension: {}\n        }\n      };\n      return GetSystemDateAndTimeResponse;\n    };\n\n    port.SetSystemDateAndTime = (args /*, cb, headers*/) => {\n      var SetSystemDateAndTimeResponse = {};\n      return SetSystemDateAndTimeResponse;\n    };\n\n    port.SystemReboot = (args /*, cb, headers*/) => {\n      var SystemRebootResponse = {\n        Message: utils.execSync(\"sudo reboot\")\n      };\n      return SystemRebootResponse;\n    };\n\n    port.GetServices = (args /*, cb, headers*/) => {\n      // ToDo. Check value of args.IncludeCapability\n\n      var GetServicesResponse = {\n        Service : [\n        {\n          Namespace : \"http://www.onvif.org/ver10/device/wsdl\",\n          XAddr : `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/device_service`,\n          Version : { \n            Major : 2,\n            Minor : 5,\n          }\n        },\n        { \n          Namespace : \"http://www.onvif.org/ver20/imaging/wsdl\",\n          XAddr : `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/imaging_service`,\n          Version : { \n            Major : 2,\n            Minor : 5,\n          }\n        },\n        { \n          Namespace : \"http://www.onvif.org/ver10/media/wsdl\",\n          XAddr : `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/media_service`,\n          Version : { \n            Major : 2,\n            Minor : 5,\n          }\n        },\n        { \n          Namespace : \"http://www.onvif.org/ver20/ptz/wsdl\",\n          XAddr : `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/ptz_service`,\n          Version : { \n            Major : 2,\n            Minor : 5,\n          },\n        }]\n      };\n\n      return GetServicesResponse;\n    };\n\n\n    port.GetCapabilities = (args /*, cb, headers*/) => {\n      var category = args.Category; // Category is Optional and may be undefined\n      //{ 'All', 'Analytics', 'Device', 'Events', 'Imaging', 'Media', 'PTZ' }\n      var GetCapabilitiesResponse = {\n        Capabilities: {}\n      };\n\n      if (category === undefined || category == \"All\" || category == \"Device\") {\n        GetCapabilitiesResponse.Capabilities[\"Device\"] = {\n          XAddr: `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/device_service`,\n          Network: {\n            IPFilter: false,\n            ZeroConfiguration: false,\n            IPVersion6: false,\n            DynDNS: false,\n            Extension: {\n              Dot11Configuration: false,\n              Extension: {}\n            }\n          },\n          System: {\n            DiscoveryResolve: false,\n            DiscoveryBye: false,\n            RemoteDiscovery: false,\n            SystemBackup: false,\n            SystemLogging: false,\n            FirmwareUpgrade: false,\n            SupportedVersions: {\n              Major: 2,\n              Minor: 5\n            },\n            Extension: {\n              HttpFirmwareUpgrade: false,\n              HttpSystemBackup: false,\n              HttpSystemLogging: false,\n              HttpSupportInformation: false,\n              Extension: {}\n            }\n          },\n          IO: {\n            InputConnectors: 0,\n            RelayOutputs: 1,\n            Extension: {\n              Auxiliary: false,\n              AuxiliaryCommands: \"\",\n              Extension: {}\n            }\n          },\n          Security: {\n            \"TLS1.1\": false,\n            \"TLS1.2\": false,\n            OnboardKeyGeneration: false,\n            AccessPolicyConfig: false,\n            \"X.509Token\": false,\n            SAMLToken: false,\n            KerberosToken: false,\n            RELToken: false,\n            Extension: {\n              \"TLS1.0\": false,\n              Extension: {\n                Dot1X: false,\n                RemoteUserHandling: false\n              }\n            }\n          },\n          Extension: {}\n        };\n      }\n      if (category == undefined || category == \"All\" || category == \"Events\") {\n        GetCapabilitiesResponse.Capabilities[\"Events\"] = {\n          XAddr: `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/events_service`,\n          WSSubscriptionPolicySupport: false,\n          WSPullPointSupport: false,\n          WSPausableSubscriptionManagerInterfaceSupport: false\n        }\n      }\n      if (category === undefined || category == \"All\" || category == \"Imaging\") {\n        GetCapabilitiesResponse.Capabilities[\"Imaging\"] = {\n          XAddr: `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/imaging_service`\n        }\n      }\n      if (category === undefined || category == \"All\" || category == \"Media\") {\n        GetCapabilitiesResponse.Capabilities[\"Media\"] = {\n          XAddr: `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/media_service`,\n          StreamingCapabilities: {\n            RTPMulticast: this.config.MulticastEnabled,\n            RTP_TCP: true,\n            RTP_RTSP_TCP: true,\n            Extension: {}\n          },\n          Extension: {\n            ProfileCapabilities: {\n              MaximumNumberOfProfiles: 1\n            }\n          }\n        }\n      }\n      if (category === undefined || category == \"All\" || category == \"PTZ\") {\n        GetCapabilitiesResponse.Capabilities[\"PTZ\"] = {\n          XAddr: `http://${utils.getIpAddress() }:${this.config.ServicePort}/onvif/ptz_service`\n        }\n      }\n      return GetCapabilitiesResponse;\n    };\n\n    port.GetHostname = (args /*, cb, headers*/) => {\n      var GetHostnameResponse = {\n        HostnameInformation: {\n          FromDHCP: false,\n          Name: os.hostname(),\n          Extension: {}\n        }\n      };\n      return GetHostnameResponse;\n    };\n\n    port.SetHostname = (args /*, cb, headers*/) => {\n      var SetHostnameResponse = {};\n      return SetHostnameResponse;\n    };\n\n    port.SetHostnameFromDHCP = (args /*, cb, headers*/) => {\n      var SetHostnameFromDHCPResponse = {\n        RebootNeeded: false\n      };\n      return SetHostnameFromDHCPResponse;\n    };\n\n    port.GetScopes = (args) => {\n      var GetScopesResponse = { Scopes: [] };\n      GetScopesResponse.Scopes.push({\n          ScopeDef: \"Fixed\",\n          ScopeItem: \"onvif://www.onvif.org/location/unknow\"\n      });\n\n      GetScopesResponse.Scopes.push({\n        ScopeDef: \"Fixed\",\n        ScopeItem: (\"onvif://www.onvif.org/hardware/\" + this.config.DeviceInformation.Model)\n      });\n\n      GetScopesResponse.Scopes.push({\n        ScopeDef: \"Fixed\",\n        ScopeItem: (\"onvif://www.onvif.org/name/\" + this.config.DeviceInformation.Manufacturer)\n      });\n\n      return GetScopesResponse;\n    };\n\n    port.GetServiceCapabilities = (args /*, cb, headers*/) => {\n      var GetServiceCapabilitiesResponse = {\n        Capabilities: {\n          Network: {\n            attributes: {\n              IPFilter: false,\n              ZeroConfiguration: false,\n              IPVersion6: false,\n              DynDNS: false,\n              Dot11Configuration: false,\n              Dot1XConfigurations: 0,\n              HostnameFromDHCP: false,\n              NTP: 0,\n              DHCPv6: false\n            }\n          },\n          Security: {\n            attributes: {\n              \"TLS1.0\": false,\n              \"TLS1.1\": false,\n              \"TLS1.2\": false,\n              OnboardKeyGeneration: false,\n              AccessPolicyConfig: false,\n              DefaultAccessPolicy: false,\n              Dot1X: false,\n              RemoteUserHandling: false,\n              \"X.509Token\": false,\n              SAMLToken: false,\n              KerberosToken: false,\n              UsernameToken: false,\n              HttpDigest: false,\n              RELToken: false,\n              SupportedEAPMethods: 0,\n              MaxUsers: 1,\n              MaxUserNameLength: 10,\n              MaxPasswordLength: 256\n            }\n          },\n          System: {\n            attributes: {\n              DiscoveryResolve: false,\n              DiscoveryBye: false,\n              RemoteDiscovery: false,\n              SystemBackup: false,\n              SystemLogging: false,\n              FirmwareUpgrade: false,\n              HttpFirmwareUpgrade: false,\n              HttpSystemBackup: false,\n              HttpSystemLogging: false,\n              HttpSupportInformation: false,\n              StorageConfiguration: false\n            }\n          },\n          //Misc : { \n          //  attributes : {\n          //    AuxiliaryCommands : {tt:StringAttrList}\n          //  }\n          //}\n        }\n      };\n      return GetServiceCapabilitiesResponse;\n    };\n\n    port.GetNTP = (args /*, cb, headers*/) => {\n      var GetNTPResponse = {};\n      return GetNTPResponse;\n    };\n\n    port.SetNTP = (args /*, cb, headers*/) => {\n      var SetNTPResponse = {};\n      return SetNTPResponse;\n    };\n\n    port.GetNetworkInterfaces = (args /*, cb, headers*/) => {\n      var GetNetworkInterfacesResponse = {\n        NetworkInterfaces: []\n      };\n      var nwifs = os.networkInterfaces();\n      for (var nwif in nwifs) {\n        for (var addr in nwifs[nwif]) {\n           if (nwifs[nwif][addr].family === 'IPv4' && nwif !== 'lo0' && nwif !== 'lo') {\n            var mac = (nwifs[nwif][addr].mac).replace(/:/g,'-');\n            var ipv4_addr = nwifs[nwif][addr].address;\n            var netmask = nwifs[nwif][addr].netmask;\n            var prefix_len = ip.subnet(ipv4_addr,netmask).subnetMaskLength;\n            GetNetworkInterfacesResponse.NetworkInterfaces.push({\n              attributes: {\n                token: nwif\n              },\n              Enabled: true,\n              Info: {\n                Name: nwif,\n                HwAddress: mac,\n                MTU: 1500\n              },\n              IPv4: {\n                Enabled: true,\n                Config: {\n                   Manual: {\n                     Address: ipv4_addr,\n                     PrefixLength: prefix_len\n                   },\n                   DHCP: false\n                }\n              }\n            });\n          }\n        }\n      }\n      return GetNetworkInterfacesResponse;\n    };\n\n    port.GetNetworkProtocols = (args /*, cb, headers*/) => {\n      var GetNetworkProtocolsResponse = {\n        NetworkProtocols: [{\n          Name: \"RTSP\",\n          Enabled: true,\n          Port: this.config.RTSPPort\n        }]\n      };\n      return GetNetworkProtocolsResponse;\n    };\n\n    port.GetRelayOutputs = (args /*, cb, headers*/) => {\n      var GetRelayOutputsResponse = {\n        RelayOutputs: [{\n          attributes: {\n            token: \"relay1\"\n          },\n          Properties : {\n            Mode: \"Bistable\",\n            // DelayTime: \"\",\n            IdleState: \"open\"\n          }\n        }]\n      };\n      return GetRelayOutputsResponse;\n    };\n\n    port.SetRelayOutputState = (args /*, cb, headers*/) => {\n      var SetRelayOutputStateResponse = {};\n      if (this.callback) {\n        if (args.LogicalState === 'active') this.callback('relayactive', { name: args.RelayOutputToken });\n        if (args.LogicalState === 'inactive') this.callback('relayinactive', { name: args.RelayOutputToken });\n      }\n      return SetRelayOutputStateResponse;\n    };\n\n    port.GetUsers = (args /*, cb, headers*/) => {\n      var GetUsersResponse = {\n//        User : [{\n//          Username : '',\n//          Password : '',\n//          UserLevel : 'Administrator',\n//        }]\n      };\n      return GetUsersResponse;\n    }\n\n\n  }\n}\nexport = DeviceService;\n"]}