{"version":3,"sources":["services/discovery_service.ts"],"names":[],"mappings":"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","file":"discovery_service.js","sourcesContent":["/// <reference path=\"../rpos.d.ts\"/>\n/// <reference path=\"../typings/main.d.ts\"/>\n\n/*\nThe MIT License(MIT)\n\nCopyright(c) 2016 Roger Hardiman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files(the \"Software\"), to deal \nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and / or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject tothe following conditions:\n\n    The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n/* \n * WS-Discovery\n * Listens on Port 3702 on 239.255.255.250 for UDP WS-Discovery Messages\n * and sends back a reply containing the ONVIF Xaddr\n *\n * Raspberry Pi: Works fine.\n\n * Windows: Will not work. Windows claims 239.255.255.250:3702 for itself (to discover things\n * on the network) and so appliications need to use a Windows API to register for discovery\n * messages. There is an example of this in the ONVIF Device Manager source.\n *\n * Mac: OS 10.10 worked but only if you ran it as root. Seems that a process\n * called SpotlightNetHelper takes the address.\n * Mac: OS 10.11 did not work (even as root)\n * \n */\n\nimport dgram = require('dgram');\nimport uuid = require('node-uuid');\nimport xml2js = require('xml2js');\nimport { Utils } from '../lib/utils';\nvar utils = Utils.utils;\n\nclass DiscoveryService {\n\n  config: rposConfig;\n\n  constructor(config: rposConfig) {\n    this.config = config;\n  }\n\n\n  start() {\n\n    if (process.platform != 'linux') {\n      utils.log.info(\"discovery_service not started (requires linux)\");\n      return;\n    }\n\n    var discover_socket = dgram.createSocket('udp4');\n    var reply_socket    = dgram.createSocket('udp4');\n\n    discover_socket.on('error', (err) => {\n      throw err;\n    });\n\n    discover_socket.on('message', (received_msg, rinfo) => {\n\n      utils.log.debug(\"Discovery received\");\n\n      // Filter xmlns namespaces from XML before calling XML2JS\n      let filtered_msg = received_msg.toString().replace(/xmlns(.*?)=(\".*?\")/g, '');\n\n      var parseString = xml2js.parseString;\n      var strip = xml2js['processors'].stripPrefix;\n      parseString(filtered_msg, { tagNameProcessors: [strip] }, (err, result) => {\n        let probe_uuid = result['Envelope']['Header'][0]['MessageID'][0];\n        let probe_type = \"\";\n        try {\n          probe_type = result['Envelope']['Body'][0]['Probe'][0]['Types'][0];\n        } catch (err) {\n          probe_type = \"\"; // For a VMS that does not send Types\n        }\n\n        if (probe_type === \"\" || probe_type.indexOf(\"NetworkVideoTransmitter\") > -1) {\n\n          let reply = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n          <SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:wsa=\"http://schemas.xmlsoap.org/ws/2004/08/addressing\" xmlns:d=\"http://schemas.xmlsoap.org/ws/2005/04/discovery\" xmlns:dn=\"http://www.onvif.org/ver10/network/wsdl\">\n            <SOAP-ENV:Header>\n              <wsa:MessageID>uuid:${uuid.v1()}</wsa:MessageID>\n              <wsa:RelatesTo>${probe_uuid}</wsa:RelatesTo>\n              <wsa:To SOAP-ENV:mustUnderstand=\"true\">http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</wsa:To>\n              <wsa:Action SOAP-ENV:mustUnderstand=\"true\">http://schemas.xmlsoap.org/ws/2005/04/discovery/ProbeMatches</wsa:Action>\n              <d:AppSequence SOAP-ENV:mustUnderstand=\"true\" MessageNumber=\"68\" InstanceId=\"1460972484\"/>\n            </SOAP-ENV:Header>\n            <SOAP-ENV:Body>\n              <d:ProbeMatches>\n                <d:ProbeMatch>\n                  <wsa:EndpointReference>\n                    <wsa:Address>urn:uuid:${utils.uuid5(utils.getIpAddress() + this.config.ServicePort + this.config.RTSPPort)}</wsa:Address>\n                  </wsa:EndpointReference>\n                  <d:Types>dn:NetworkVideoTransmitter</d:Types>\n                  <d:Scopes>onvif://www.onvif.org/type/video_encoder onvif://www.onvif.org/type/ptz onvif://www.onvif.org/hardware/RaspberryPI onvif://www.onvif.org/name/PI onvif://www.onvif.org/location/</d:Scopes>\n                  <d:XAddrs>http://${utils.getIpAddress()}:${this.config.ServicePort}/onvif/device_service</d:XAddrs>\n                  <d:MetadataVersion>1</d:MetadataVersion>\n              </d:ProbeMatch>\n              </d:ProbeMatches>\n            </SOAP-ENV:Body>\n          </SOAP-ENV:Envelope>`;\n\n          let reply_bytes = new Buffer(reply);\n\n          // Mac needed replies from a different UDP socket (ie not the bounded socket)\n          return reply_socket.send(reply_bytes, 0, reply_bytes.length, rinfo.port, rinfo.address);\n        }\n      });\n    });\n\n    discover_socket.bind(3702, '239.255.255.250', () => {\n      discover_socket.addMembership('239.255.255.250', utils.getIpAddress());\n    });\n\n    utils.log.info(\"discovery_service started\");\n\n  };\n\n} // end class Discovery\n\nexport = DiscoveryService;\n"]}