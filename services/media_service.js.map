{"version":3,"sources":["services/media_service.ts"],"names":[],"mappings":"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","file":"media_service.js","sourcesContent":["///<reference path=\"../typings/main.d.ts\" />\n///<reference path=\"../rpos.d.ts\" />\nimport fs = require(\"fs\");\nimport util = require(\"util\");\nimport SoapService = require('../lib/SoapService');\nimport { Utils }  from '../lib/utils';\nimport url = require('url');\nimport { Server } from 'http';\nimport Camera = require('../lib/camera');\nimport { v4l2ctl } from '../lib/v4l2ctl';\nimport { exec } from 'child_process';\nimport PTZService = require('./ptz_service');\nvar utils = Utils.utils;\n\nclass MediaService extends SoapService {\n  media_service: any;\n  camera: Camera;\n  ptz_service: PTZService;\n  ffmpeg_process: any = null;\n  ffmpeg_responses: any[] = [];\n\n  constructor(config: rposConfig, server: Server, camera: Camera, ptz_service: PTZService) {\n    super(config, server);\n    this.media_service = require('./stubs/media_service.js').MediaService;\n\n    this.camera = camera;\n    this.ptz_service = ptz_service;\n    this.serviceOptions = {\n      path: '/onvif/media_service',\n      services: this.media_service,\n      xml: fs.readFileSync('./wsdl/media_service.wsdl', 'utf8'),\n      wsdlPath: 'wsdl/media_service.wsdl',\n      onReady: function() {\n        utils.log.info('media_service started');\n      }\n    };\n    \n    this.extendService();\n  }\n\n  starting() {\n    var listeners = this.webserver.listeners('request').slice();\n    this.webserver.removeAllListeners('request');\n    this.webserver.addListener('request', (request, response, next) => {\n      utils.log.debug('web request received : %s', request.url);\n\n      var uri = url.parse(request.url, true);\n      var action = uri.pathname;\n      if (action == '/web/snapshot.jpg') {\n        if (this.ffmpeg_process != null) {\n          utils.log.info(\"ffmpeg - already running\");\n          this.ffmpeg_responses.push(response);\n        } else {\n          var cmd = `ffmpeg -fflags nobuffer -probesize 256 -rtsp_transport tcp -i rtsp://127.0.0.1:${this.config.RTSPPort}/${this.config.RTSPName} -vframes 1  -r 1 -s 640x360 -y /dev/shm/snapshot.jpg`;\n          var options = { timeout: 15000 };\n          utils.log.info(\"ffmpeg - starting\");\n          this.ffmpeg_responses.push(response);\n          this.ffmpeg_process = exec(cmd,options,(error,stdout,stderr) => {\n            // callback\n            utils.log.info(\"ffmpeg - finished\");\n            if (error) {\n              utils.log.warn('ffmpeg exec error: %s',error);\n            }\n            this.ffmpeg_responses.forEach( (response) => { this.deliver_jpg(response); } );\n            this.ffmpeg_process = null;\n          });\n        }\n      } else {\n        for (var i = 0, len = listeners.length; i < len; i++) {\n          listeners[i].call(this, request, response, next);\n        }\n      }\n    });\n  }\n\n  deliver_jpg(response: any){\n    try {\n      var img = fs.readFileSync('/dev/shm/snapshot.jpg');\n      response.writeHead(200, { 'Content-Type': 'image/jpg' });\n      response.end(img, 'binary');\n    } catch (err) {\n      utils.log.debug(\"Error opening snapshot : %s\", err);\n      var img = fs.readFileSync('web/snapshot.jpg');\n      response.writeHead(200, { 'Content-Type': 'image/jpg' });\n      response.end(img, 'binary');\n    }\n  }\n\n  started() {\n    this.camera.startRtsp();\n  }\n\n  extendService() {\n    var port = this.media_service.MediaService.Media;\n\n    var cameraOptions = this.camera.options;\n    var cameraSettings = this.camera.settings;\n    var camera = this.camera;\n\n    var h264Profiles = v4l2ctl.Controls.CodecControls.h264_profile.getLookupSet().map(ls=>ls.desc);\n    h264Profiles.splice(1, 1);\n\n    var videoConfigurationOptions = {\n      QualityRange: {\n        Min: 1,\n        Max: 1\n      },\n      H264: {\n        ResolutionsAvailable: cameraOptions.resolutions,\n        GovLengthRange: {\n          Min: v4l2ctl.Controls.CodecControls.h264_i_frame_period.getRange().min,\n          Max: v4l2ctl.Controls.CodecControls.h264_i_frame_period.getRange().max\n        },\n        FrameRateRange: {\n          Min: cameraOptions.framerates[0],\n          Max: cameraOptions.framerates[cameraOptions.framerates.length - 1]\n        },\n        EncodingIntervalRange: { Min: 1, Max: 1 },\n        H264ProfilesSupported: h264Profiles\n      },\n      Extension: {\n        H264: {\n          ResolutionsAvailable: cameraOptions.resolutions,\n          GovLengthRange: {\n            Min: v4l2ctl.Controls.CodecControls.h264_i_frame_period.getRange().min,\n            Max: v4l2ctl.Controls.CodecControls.h264_i_frame_period.getRange().max\n          },\n          FrameRateRange: {\n            Min: cameraOptions.framerates[0],\n            Max: cameraOptions.framerates[cameraOptions.framerates.length - 1]\n          },\n          EncodingIntervalRange: { Min: 1, Max: 1 },\n          H264ProfilesSupported: h264Profiles,\n          BitrateRange: {\n            Min: cameraOptions.bitrates[0],\n            Max: cameraOptions.bitrates[cameraOptions.bitrates.length - 1]\n          }\n        }\n      }\n    };\n\n    var videoEncoderConfiguration = {\n      attributes: {\n        token: \"encoder_config_token\"\n      },\n      Name: \"PiCameraConfiguration\",\n      UseCount: 0,\n      Encoding: \"H264\",\n      Resolution: {\n        Width: cameraSettings.resolution.Width,\n        Height: cameraSettings.resolution.Height\n      },\n      Quality: v4l2ctl.Controls.CodecControls.video_bitrate.value ? 1 : 1,\n      RateControl: {\n        FrameRateLimit: cameraSettings.framerate,\n        EncodingInterval: 1,\n        BitrateLimit: v4l2ctl.Controls.CodecControls.video_bitrate.value / 1000\n      },\n      H264: {\n        GovLength: v4l2ctl.Controls.CodecControls.h264_i_frame_period.value,\n        H264Profile: v4l2ctl.Controls.CodecControls.h264_profile.desc\n      },\n      Multicast: {\n        Address: {\n          Type: \"IPv4\",\n          IPv4Address: \"0.0.0.0\"\n        },\n        Port: 0,\n        TTL:  1,\n        AutoStart: false\n      },\n      SessionTimeout: \"PT1000S\"\n    };\n\n    var videoSource = {\n      attributes: {\n        token: \"video_src_token\"\n      },\n      Framerate: 25,\n      Resolution: { Width: 1920, Height: 1280 }\n    };\n\n    var videoSourceConfiguration = {\n      Name: \"Primary Source\",\n      UseCount: 0,\n      attributes: {\n        token: \"video_src_config_token\"\n      },\n      SourceToken: \"video_src_token\",\n      Bounds: { attributes: { x: 0, y: 0, width: 1920, height: 1080 } }\n    };\n\n    var audioEncoderConfigurationOptions = {\n      Options: []\n    };\n\n    var profile = {\n      Name: \"CurrentProfile\",\n      attributes: {\n        token: \"profile_token\"\n      },\n      VideoSourceConfiguration: videoSourceConfiguration,\n      VideoEncoderConfiguration: videoEncoderConfiguration,\n      PTZConfiguration: this.ptz_service.ptzConfiguration\n    };\n\n    port.GetServiceCapabilities = (args /*, cb, headers*/) => {\n      var GetServiceCapabilitiesResponse = {\n        Capabilities: {\n          attributes: {\n            SnapshotUri: true,\n            Rotation: false,\n            VideoSourceMode: true,\n            OSD: false\n          },\n          ProfileCapabilities: {\n            attributes: {\n              MaximumNumberOfProfiles: 1\n            }\n          },\n          StreamingCapabilities: {\n            attributes: {\n              RTPMulticast: this.config.MulticastEnabled,\n              RTP_TCP: true,\n              RTP_RTSP_TCP: true,\n              NonAggregateControl: false,\n              NoRTSPStreaming: false\n            }\n          }\n        }\n      };\n      return GetServiceCapabilitiesResponse;\n    };\n\n    //var GetStreamUri = { \n    //StreamSetup : { \n    //Stream : { xs:string}\n    //},\n    //ProfileToken : { xs:string}\n    //\n    //};\n    port.GetStreamUri = (args /*, cb, headers*/) => {\n\n     // Usually RTSP server is on same IP Address as the ONVIF Service\n     // Setting RTSPAddress in the config file lets you to use another IP Address\n     let rtspAddress = utils.getIpAddress();\n     if (this.config.RTSPAddress.length > 0) rtspAddress = this.config.RTSPAddress;\n\n      var GetStreamUriResponse = {\n        MediaUri: {\n          Uri: (args.StreamSetup.Stream == \"RTP-Multicast\" && this.config.MulticastEnabled ? \n            `rtsp://${rtspAddress}:${this.config.RTSPPort}/${this.config.RTSPMulticastName}` :\n            `rtsp://${rtspAddress}:${this.config.RTSPPort}/${this.config.RTSPName}`),\n          InvalidAfterConnect: false,\n          InvalidAfterReboot: false,\n          Timeout: \"PT30S\"\n        }\n      };\n      return GetStreamUriResponse;\n    };\n\n    port.GetProfile = (args) => {\n      var GetProfileResponse = { Profile: profile };\n      return GetProfileResponse;\n    };\n\n    port.GetProfiles = (args) => {\n      var GetProfilesResponse = { Profiles: [profile] };\n      return GetProfilesResponse;\n    };\n\n    port.CreateProfile = (args) => {\n      var CreateProfileResponse = { Profile: profile };\n      return CreateProfileResponse;\n    };\n\n    port.DeleteProfile = (args) => {\n      var DeleteProfileResponse = {};\n      return DeleteProfileResponse;\n    };\n\n    port.GetVideoSources = (args) => {\n        var GetVideoSourcesResponse = { VideoSources: [videoSource] };\n        return GetVideoSourcesResponse;\n    }\n\n    port.GetVideoSourceConfigurations = (args) => {\n      var GetVideoSourceConfigurationsResponse = { Configurations: [videoSourceConfiguration] };\n      return GetVideoSourceConfigurationsResponse;\n    };\n\n    port.GetVideoSourceConfiguration = (args) => {\n        var GetVideoSourceConfigurationResponse = { Configurations: videoSourceConfiguration };\n        return GetVideoSourceConfigurationResponse;\n    };\n\n    port.GetVideoEncoderConfigurations = (args) => {\n      var GetVideoEncoderConfigurationsResponse = { Configurations: [videoEncoderConfiguration] };\n      return GetVideoEncoderConfigurationsResponse;\n    };\n\n    port.GetVideoEncoderConfiguration = (args) => {\n      var GetVideoEncoderConfigurationResponse = { Configuration: videoEncoderConfiguration };\n      return GetVideoEncoderConfigurationResponse;\n    };\n\n    port.SetVideoEncoderConfiguration = (args) => {\n      var settings = {\n        bitrate: args.Configuration.RateControl.BitrateLimit,\n        framerate: args.Configuration.RateControl.FrameRateLimit,\n        gop: args.Configuration.H264.GovLength,\n        profile: args.Configuration.H264.H264Profile,\n        quality: args.Configuration.Quality instanceof Object ? 1 : args.Configuration.Quality,\n        resolution: args.Configuration.Resolution\n      };\n      camera.setSettings(settings);\n\n      var SetVideoEncoderConfigurationResponse = {};\n      return SetVideoEncoderConfigurationResponse;\n    };\n\n    port.GetVideoEncoderConfigurationOptions = (args) => {\n      var GetVideoEncoderConfigurationOptionsResponse = { Options: videoConfigurationOptions };\n      return GetVideoEncoderConfigurationOptionsResponse;\n    };\n\n    port.GetGuaranteedNumberOfVideoEncoderInstances = (args) => {\n      var GetGuaranteedNumberOfVideoEncoderInstancesResponse = {\n        TotalNumber: 1,\n        H264: 1\n      }\n      return GetGuaranteedNumberOfVideoEncoderInstancesResponse;\n    };\n\n    port.GetSnapshotUri = (args) => {\n      var GetSnapshotUriResponse = {\n        MediaUri : {\n          Uri : \"http://\" + utils.getIpAddress() + \":\" + this.config.ServicePort + \"/web/snapshot.jpg\",\n          InvalidAfterConnect : false,\n          InvalidAfterReboot : false,\n          Timeout : \"PT30S\"\n        }\n      };\n      return GetSnapshotUriResponse;\n    };\n\n    port.GetAudioEncoderConfigurationOptions = (args) => {\n      var GetAudioEncoderConfigurationOptionsResponse = { Options: [{}] };\n      return GetAudioEncoderConfigurationOptionsResponse;\n    };\n  }\n}\nexport = MediaService;\n"]}